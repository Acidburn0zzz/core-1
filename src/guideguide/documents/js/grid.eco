---
write: false
---

# Highlight all field icons of similar type
$(document).on 'mouseover', '.js-grid-form [data-distribute] .js-iconned-input-button', (event) ->
  $form   = $(this).closest '.js-grid-form'
  type    = $(this).closest('[data-distribute]').attr 'data-distribute'
  $fields = filteredList $form.find('.js-grid-form-iconned-input'), type

  $fields.addClass 'distribute-highlight'

# Remove highlight from field icons
$(document).on 'mouseout', '.js-grid-form [data-distribute] .js-iconned-input-button', (event) ->
  $(this).closest('.js-grid-form').find('.js-grid-form-iconned-input').removeClass 'distribute-highlight'

# When the form margin icon is clicked, change all of the margin inputs to that value.
$(document).on 'click', '.js-grid-form [data-distribute] .js-iconned-input-button', (event) ->
  event.preventDefault()
  $form  = $(this).closest '.js-grid-form'
  $input = $(this).closest '.js-grid-form-iconned-input'
  $field = $input.find('.js-grid-form-input')
  formatField $field
  value   = $field.val()
  type    = $input.attr 'data-distribute'
  $fields = filteredList $form.find('.js-grid-form-iconned-input'), type
  $fields.find('.js-grid-form-input').val value

# When a field is focused, reset it's validity and store it's value
$(document).on 'focus', '.js-grid-form .js-grid-form-input', (event) ->
  $(this).attr 'data-valid', true

# When a field is unfocused, validate its contents
$(document).on 'blur', '.js-grid-form .js-grid-form-input', (event) ->
  if $(this).val()
    int = false

    if $(this).attr 'data-integer'
      $(this).val Math.round parseFloat $(this).val()
      int = true

    if !isValid $(this).val(), int
      $(this).attr 'data-valid', false
    else
      formatField $(this)

# Create a grid from the form inputs
$(document).on 'click', '.js-grid-form .js-make-grid', (event) ->
  event.preventDefault()
  $form  = $(this).closest '.js-grid-form'
  string = stringifyFormData getFormData $form

  return unless $form.find('[data-valid="false"]').length == 0 and string and appAdapter.getInfo()

  console.group 'Add guides from grid form'
  console.log string
  ggsn = new GGSN(string)
  console.log ggsn
  appAdapter.addGuides getGuides new GGSN string
  console.groupEnd()

$(document).on 'click', '.js-grid-form .js-new-set', (event) ->
  event.preventDefault()
  $('#guideguide').trigger 'internal:showNewSetForm'

$(document).on 'click', '.js-grid-form .js-cancel-set', (event) ->
  event.preventDefault()
  $('#guideguide').trigger 'internal:hideNewSetForm'

stringifyFormData = (data) ->
  info = appAdapter.getInfo()
  string = ''
  # Variables
  if data.countColumn or data.widthColumn
    string += '$v =|'
    string += if data.widthColumn then data.widthColumn else '~'
    string += '|'
    string += data.gutterColumn if data.gutterColumn
    string += '\n'

  if data.countRow or data.widthRow
    string += '$h =|'
    string += if data.widthRow then data.widthRow else '~'
    string += '|'
    string += data.gutterRow if data.gutterRow
    string += '\n'

  string += '\n' if data.countColumn or data.widthColumn or data.countRow or data.widthRow

  if data.marginLeft or data.marginRight or data.countColumn or data.widthColumn
    # Grids
    string += '|' + data.marginLeft.replace(/\s/g,'').split(',').join('|') + '|' if data.marginLeft
    if data.countColumn or data.widthColumn
      string += '|$v*'
      string += data.countColumn - 1 if data.countColumn
      string += '|' + data.widthColumn if (data.widthColumn and data.countColumn) or (data.widthColumn and data.gutterColumn)
      string += '|~' if !data.widthColumn
      string += '|'
    if data.marginRight
      string += '~' if (!data.countColumn and !data.widthColumn) or (data.countColumn and data.widthColumn)
      string += '|' + data.marginRight.replace(/\s/g,'').split(',').join('|') + '|'
    string += ' (hF'
    string += 'f' if appAdapter.data.settings.horizontalRemainder == 'first'
    string += 'c' if appAdapter.data.settings.horizontalRemainder == 'center'
    string += 'l' if appAdapter.data.settings.horizontalRemainder == 'last'
    string += 'p' if appAdapter.data.settings.calculation == 'pixel'
    string += ')\n'

  if data.marginTop or data.marginBottom or data.countRow or data.widthRow
    # Grids
    string += '|' + data.marginTop.replace(/\s/g,'').split(',').join('|') + '|' if data.marginTop
    if data.countRow or data.widthRow
      string += '|$h*'
      string += data.countRow - 1 if data.countRow
      string += '|' + data.widthRow if (data.widthRow and data.countRow) or (data.widthRow and data.gutterRow)
      string += '|~' if !data.widthRow
      string += '|'
    if data.marginBottom
      string += '~' if (!data.countRow and !data.widthRow) or (data.countRow and data.widthRow)
      string += '|' + data.marginBottom.replace(/\s/g,'').split(',').join('|') + '|'
    string += ' (vF'
    string += 'f' if appAdapter.data.settings.horizontalRemainder == 'first'
    string += 'c' if appAdapter.data.settings.horizontalRemainder == 'center'
    string += 'l' if appAdapter.data.settings.horizontalRemainder == 'last'
    string += 'p' if appAdapter.data.settings.calculation == 'pixel'
    string += ')'

  # Rather than fiddle with spaces and duplicate pipes in the string calculation,
  # just do a second pass on the string to clean everything up.
  return string.replace(/\|+/g,'|').replace(/\|/g, ' | ').replace(/^[^\S\n]+|[^\S\n]+$/mg,'') 

# Reformat a unit string to match conventions
#
#   $field - input to format
#
# Returns a String
formatField = ($field) ->
  int = if $field.attr 'data-integer' then true else false
  $field.val $.map $field.val().split(','), (unit) ->
    new Unit(unit,int).toString()
  .join(', ')


# Sort a list of form fields and return ones that match a filter
#
#    $list - list of objects to be filtered
#    type  - type of form field to return
#
# Returns an Array of jquery objects
filteredList = ($list,type) ->
  filter  = -> $(this).attr('data-distribute') is type
  $fields = $list.filter filter


# Collect data from the grid form.
#
#   $form - jQuery object of the form to be used
#
# Returns an Object
getFormData = ($form) ->
  obj =
    name: $('.js-grid-form .js-set-name').val()

  $fields = $form.find '.js-grid-form-input'
  $fields.each (index,element) ->
    key = $(element).attr 'data-type'
    obj[key] = $(element).val()
  obj

# Determine whether the value in the form is valid
#
#   string - string to be validated
#
# Returns a Boolean
isValid = (string, integerOnly = false) ->
  units = string.split ','
  units = units.filter (unit) =>
    u = new Unit(unit,integerOnly)
    !u.isValid

  units.length == 0
