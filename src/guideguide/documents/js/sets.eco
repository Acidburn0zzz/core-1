---
write: false
---

# When leaving the custom form tab do
$(document).on 'guideguideInternal:exitggsn', '#guideguide', (event) ->
  $(this).find('.js-ggsn-input').val('') if $(this).hasClass 'is-showing-new-set-form'
  $('#guideguide').trigger 'guideguideInternal:hideNewSetForm'

# Create a grid from the form inputs
$(document).on 'click', '.js-sets-form .js-make-grid', (event) ->
  event.preventDefault()
  $set = $('.js-set-list').find('.is-selected').first()
  
  return unless $set.length and appAdapter.getInfo()

  console.log 'Grid from set'
  data = $.grep appAdapter.data.sets, (set) -> parseInt(set.id) == parseInt($set.attr 'data-id')
  console.log data
  appAdapter.addGuides getGuides new GGSN data[0].string

# Create a new set
$(document).on 'click', '.js-sets-form .js-new-set', (event) ->
  event.preventDefault()
  $('#guideguide .js-custom-tab').click()  
  $('#guideguide').trigger 'guideguideInternal:showNewGGSNForm'

# Select a set
$(document).on 'click', '.js-sets-form .js-set-select', (event) ->
  event.preventDefault()
  $(this).closest('.js-sets-form').find('.is-selected').removeClass 'is-selected'
  $(this).closest('.js-set').addClass 'is-selected'

# Delet a set
$(document).on 'click', '.js-sets-form .js-delete-set', (event) ->
  event.preventDefault()
  $set = $(this).closest '.js-set'
  id = $set.attr 'data-id'

  appAdapter.data.sets = $.grep appAdapter.data.sets, (set) -> parseInt(set.id) != parseInt(id)

  appAdapter.saveData()
  $('#guideguide').trigger 'guideguideInternal:refreshSets'

# Open set editor
$(document).on 'click', '.js-sets-form .js-edit-set', (event) ->
  event.preventDefault()
  $set = $(this).closest '.js-set'
  id = $set.attr 'data-id'
  
  set = $.grep appAdapter.data.sets, (set) -> parseInt(set.id) == parseInt(id)

  $form = $('#guideguide').find('.js-ggsn-form')
  $form.find('.js-set-name').val set[0].name
  $form.find('.js-ggsn-input').val set[0].string
  $form.find('.js-set-id').val set[0].id

  $('#guideguide').find('.js-custom-tab').click()
  $('#guideguide').trigger 'guideguideInternal:showNewGGSNForm'

# Fire save set event and pass it the contents of the grid form
$(document).on 'click', '.js-ggsn-form .js-save-set', (event) ->
  event.preventDefault()
  $form = $(this).closest '.js-ggsn-form'
  string = $('.js-ggsn-input').val().replace /^\s+|\s+$/g, ''
  executable = $form.find('[data-valid="false"]').length == 0 and string.length > 0
  
  if executable
    obj =
      id: $form.find('.js-set-id').val()
      name: $form.find('.js-set-name').val()
      ggsn: string

    if !$('#guideguide').find('.js-set-id').val()
      $('#guideguide').trigger 'guideguideInternal:newSet', obj
    else
      $('#guideguide').trigger 'guideguideInternal:updateSet', obj

    $('#guideguide .js-sets-tab').click()

# Fire save set event and pass it the contents of the grid form
$(document).on 'click', '.js-grid-form .js-save-set', (event) ->
  event.preventDefault()
  $form  = $(this).closest '.js-grid-form'
  data   = getFormData $form
  string = stringifyFormData data
  executable = $form.find('[data-valid="false"]').length == 0 and string

  if executable
    console.group 'New set from form'
    console.log string
    console.groupEnd()
    obj =
      name: data.name
      ggsn: string

    $('#guideguide').trigger 'guideguideInternal:newSet', obj
    $('#guideguide .js-sets-tab').click()

# Update a set with new data
#
#   data - information for the set
#
$(document).on 'guideguideInternal:updateSet', '#guideguide', (event, data) ->
  set = $.grep appAdapter.data.sets, (set) -> parseInt(set.id) == parseInt(data.id)

  set[0].name = data.name
  set[0].string = data.ggsn

  appAdapter.saveData()
  $('#guideguide').trigger 'guideguideInternal:refreshSets'

# Add a new set to the list of sets
#
#   data - information for the set
#
$(document).on 'guideguideInternal:newSet', '#guideguide', (event, data) ->
  newSet =
    id: appAdapter.data.panel.newSetId
    name: data.name
    string: data.ggsn

  appAdapter.data.panel.newSetId++
  appAdapter.data.sets.push newSet
  appAdapter.saveData()
  $('#guideguide').trigger 'guideguideInternal:refreshSets'

# Display new set name, swap in save set and cancel set buttons,
# hide make grid and new set buttons
# Focus into the name field
$(document).on 'guideguideInternal:showNewSetForm', '#guideguide', (event) ->
  $(this).addClass 'is-showing-new-set-form'
  $('#guideguide').find('.js-grid-form').find('.js-set-name').focus() 

# Hide new set name, swap out save set and cancel set buttons,
# show make grid and new set buttons
$(document).on 'guideguideInternal:hideNewSetForm', '#guideguide', (event) ->
  $(this).find('.js-set-name').val('')
  $(this).find('.js-set-id').val('')
  $(this).removeClass 'is-showing-new-set-form'

# Refresh the list of sets
$(document).on 'guideguideInternal:refreshSets', '#guideguide', (event) ->
  $list = $('.js-set-list')
  $list.find('.js-set').remove()
  $.each appAdapter.data.sets, (index,set) =>
    item = $('.js-set-item-template').clone(true).removeClass('js-set-item-template').css('display','')
    item.find('.js-set-item-name').html set.name
    item.attr 'data-id', set.id
    $list.append item
