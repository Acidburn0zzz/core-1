---
write: false
---

# The Messages class makes it possible to provide GuideGuide in multiple
# languages. English is used by default if a translation does not exist for the
# i18n string provided. To add a new language, add a new `when` block for the
# desired i18n string that returns the translated string. For methods that
# include dynamic data, be sure to include the dynamic data.
#
# Usage:
#   var messages = new Messages "en_us"
#   console.log messages.makeGrid()
#   # Make grid
#
# Styleguide
#   - Use sentence case for titles.
#
class Messages
  i18n: "en_us"

  # Create a Messages object and set the language to be used.
  #
  #   locale - locale code for language of choice
  #
  # Currently supported locale:
  #   - English: en_us
  #
  constructor: (locale) ->
    @i18n = locale if locale?

  #
  # UI Messages
  # These messages are generally titles and button labels.
  #

  uiGrid: =>
    switch @i18n
      when ""
      else
        "Grid"

  uiCustom: =>
    switch @i18n
      when ""
      else
        "Custom"

  uiSets: =>
    switch @i18n
      when ""
      else
        "Sets"

  uiUpdates: =>
    switch @i18n
      when ""
      else
        "Updates"

  uiDebug: =>
    switch @i18n
      when ""
      else
        "Debug"

  uiMakeGrid: =>
    switch @i18n
      when ""
      else
        "Make grid"

  uiSaveSet: =>
    switch @i18n
      when ""
      else
        "Save set"

  uiSaveSettings: =>
    switch @i18n
      when ""
      else
        "Save settings"

  uiImport: =>
    switch @i18n
      when ""
      else
        "Import"

  uiExport: =>
    switch @i18n
      when ""
      else
        "Export"

  uiOk: =>
    switch @i18n
      when ""
      else
        "Ok"

  uiCancel: =>
    switch @i18n
      when ""
      else
        "Cancel"

  uiDonate: =>
    switch @i18n
      when ""
      else
        "Donate"

  uiCheckForUpdates: =>
    switch @i18n
      when ""
      else
        "Check for updates"

  uiShowLogs: =>
    switch @i18n
      when ""
      else
        "Show logs"

  uiHorizontalPosition: =>
    switch @i18n
      when ""
      else
        "Horizontal position"

  uiVerticalPosition: =>
    switch @i18n
      when ""
      else
        "Vertical position"

  uiHorizontalRemainder: =>
    switch @i18n
      when ""
      else
        "Horizontal remainder"

  uiVerticalRemainder: =>
    switch @i18n
      when ""
      else
        "Vertical remainder"

  uiReportAnonymousData: =>
    switch @i18n
      when ""
      else
        "Report anonymous data"

  uiHorizontalFirst: =>
    switch @i18n
      when ""
      else
        "Left"

  uiHorizontalCenter: =>
    switch @i18n
      when ""
      else
        "Center"

  uiHorizontalLast: =>
    switch @i18n
      when ""
      else
        "Right"

  uiVerticalFirst: =>
    switch @i18n
      when ""
      else
        "Top"

  uiVerticalCenter: =>
    switch @i18n
      when ""
      else
        "Center"

  uiVerticalLast: =>
    switch @i18n
      when ""
      else
        "Bottom"

  uiYes: =>
    switch @i18n
      when ""
      else
        "Yes"

  uiNo: =>
    switch @i18n
      when ""
      else
        "No"

  uiNiceNo: =>
    switch @i18n
      when ""
      else
        "No thanks"

  uiOpenInBrowser: =>
    switch @i18n
      when ""
      else
        "Open in browser"

  #
  # Help Messages
  # These are essentially tooltips. They appear in the UI to explain features.
  #

  helpPosition: =>
    switch @i18n
      when ""
      else
        "This determines where GuideGuide puts a grid when it is smaller
        than the available area."

  helpRemainder: =>
    switch @i18n
      when ""
      else
        "In pixel mode, GuideGuide rounds down decimal pixel widths
        and uses this setting to determine which columns or rows receive
        the remainder pixels."

  helpImportDesc: =>
    switch @i18n
      when ""
      else
        "Import sets by pasting a GitHub Gist url in the text field below."

  helpGistExport: =>
    switch @i18n
      when ""
      else
        'This is guide set data exported by the GuideGuide plugin. To import
        them, click the "Import" button in the GuideGuide settings and paste
        this Gist url, or the contents of `sets.json` into the text field.'

  helpImportExport: =>
    switch @i18n
      when ""
      else
        "GuideGuide imports and exports its data via"

  #
  # Alert Messages
  # These are titles and messages for alert dialogues.
  #

  alertTitleWelcome: =>
    switch @i18n
      when ""
      else
        "Welcome to GuideGuide"

  alertMessageWelcome: =>
    switch @i18n
      when ""
      else
        "This is the beginning of something special. To help GuideGuide
        get more and more awesome, would you allow GuideGuide to submit
        anonymous usage data?"

  alertTitleUpToDate: =>
    switch @i18n
      when ""
      else
        "Up to date"

  alertMessageUpToDate: =>
    switch @i18n
      when ""
      else
        "GuideGuide is currently up to date."

  alertTitleUpdateError: =>
    switch @i18n
      when ""
      else
        "Error checking for updates"

  alertMessageUpdateError: =>
    switch @i18n
      when ""
      else
        "Unfortunately, GuideGuide is unable to check for updates at this time.
        Please try again later."

  alertTitleImportSuccess: =>
    switch @i18n
      when ""
      else
        "Sets imported"

  alertMessageImportSuccess: =>
    switch @i18n
      when ""
      else
        "Your sets have successfully been imported."

  alertTitleImportGistError: =>
    switch @i18n
      when ""
      else
        "Import Error"

  alertMessageImportGistError: =>
    switch @i18n
      when ""
      else
        "Unfortunately, GuideGuide is unable to import sets at this time.
        Please try again later."

  alertTitleImportGistNoSets: =>
    switch @i18n
      when ""
      else
        "Import error"

  alertMessageImportGistNoSets: =>
    switch @i18n
      when ""
      else
        "GuideGuide was not able to find sets.json in this Gist."

  alertTitleImportNotGist: =>
    switch @i18n
      when ""
      else
        "Import Error"

  alertMessageImportNotGist: =>
    switch @i18n
      when ""
      else
        "The input text does not contain a GitHub Gist url."

  alertTitleExportSuccess: =>
    switch @i18n
      when ""
      else
        "Sets have been exported"

  alertMessageExportSuccess: =>
    switch @i18n
      when ""
      else
        "Your sets have been exported to a secret GitHub Gist."

  alertTitleExportError: =>
    switch @i18n
      when ""
      else
        "Unable to export"

  alertMessageExportError: =>
    switch @i18n
      when ""
      else
        "Unfortunately, GuideGuide is unable to export sets at this time.
        Please try again later."

  alertTitleDonate: =>
    switch @i18n
      when ""
      else
        "Would you like to donate?"

  alertMessageDonate: =>
    switch @i18n
      when ""
      else
        "Yowza, you've used GuideGuide 30 times! Since you seem to get quite a
        bit of use out of GuideGuide, would you consider making a donation to
        the development?"

  #
  # GuideGuide Notation messages
  # These messages appear in the Custom field
  #

  gapUnrecognized: =>
    switch @i18n
      when ""
      else
        "Unrecognized gap"

  gapNoFillWildcards: =>
    switch @i18n
      when ""
      else
        "Wildcards cannot be fills"

  ggnNoGrids: =>
    switch @i18n
      when ""
      else
        "This string does not contain any grids"

  ggnFillInVariable: =>
    switch @i18n
      when ""
      else
        "Variables cannot contain a fill"

  ggnNoWildcardsInVariableFills: =>
    switch @i18n
      when ""
      else
        "A variable used as a fill can not contain a wildcard"

  ggnUndefinedVariable: =>
    switch @i18n
      when ""
      else
        "Undefined variable"

  ggnOneFillPerGrid: =>
    switch @i18n
      when ""
      else
        "A grid can only contain one fill"

  ggnMoreThanOneHundredPercent: =>
    switch @i18n
      when ""
      else
        "A grid cannot contain more than 100%"

  ggnStringFromExistingGuides: =>
    switch @i18n
      when ""
      else
        "String generated from existing guides"
